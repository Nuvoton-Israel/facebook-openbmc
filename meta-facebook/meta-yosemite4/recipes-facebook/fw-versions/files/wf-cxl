#!/bin/bash
set -e

slot=$1
# Wait for the CXL devices to be ready
sleep 60


for pos in 1 2; do
    eid=$((10 * slot + pos + 3))

    if ! busctl get-property \
            xyz.openbmc_project.MCTP "/xyz/openbmc_project/mctp/1/$eid" \
            xyz.openbmc_project.MCTP.Endpoint EID ; then
        echo "CXL $pos not active"
        continue
    fi

    MAX_RETRIES=3
    RETRY_COUNT=0
    TIMEOUT_DURATION=3

    while [ "$RETRY_COUNT" -lt "$MAX_RETRIES" ]; do
        # Store the output of the command in a variable
        output=$(timeout $TIMEOUT_DURATION cxl-fw-update version -m $eid 2>&1 || true)

        # Check for non-empty output
        if [ -z "$output" ]; then
            echo "No output from cxl-fw-update. Retrying... ($((RETRY_COUNT + 1))/$MAX_RETRIES)"
            RETRY_COUNT=$((RETRY_COUNT + 1))
            sleep 1
        else
            # Extract the active slot number
            active_slot=$(echo "$output" | grep "Active FW Slot" | awk '{print $4}')

            # Extract the firmware version for the active slot
            version=$(echo "$output" | grep "Slot $active_slot FW Revision" | sed 's/.*: //')

            # If timeout occured, the output will be unexpected and the version will be empty.
            if [ -z "$version" ]; then
                echo "Unexpected output from cxl-fw-update:"
                echo "$output"
                RETRY_COUNT=$((RETRY_COUNT + 1))
                sleep 1
                continue
            fi

            busctl set-property \
                xyz.openbmc_project.Settings \
                "/xyz/openbmc_project/software/host$slot/Wailua_Falls_cxl_$pos" \
                xyz.openbmc_project.Software.Version \
                Version "s" "$version"

            break
        fi
    done

    if [ "$RETRY_COUNT" -eq "$MAX_RETRIES" ]; then
        echo "Failed to get output from cxl-fw-update after $MAX_RETRIES retries on CXL$pos."
        exit 1
    fi

done
