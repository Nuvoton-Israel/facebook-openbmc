#!/bin/bash
set -e

slot=$1
eid=$((10 * slot))

MAX_RETRIES=3
RETRY_COUNT=0
version_pvddcr_cpu1=""
version_pvdd11_s3=""
version_pvddcr_cpu0=""

while [ "$RETRY_COUNT" -lt "$MAX_RETRIES" ]; do
    versions=$(
        pldmtool fw_update GetFwParams -m $eid |
        jq --raw-output '
            .ComponentParameterEntries |
            map({ (.ComponentIdentifier|tostring): .ActiveComponentVersionString}) |
            add
        '
    )

    version_pvddcr_cpu1=$(jq --raw-output ".\"1\"" <<< "$versions")
    version_pvdd11_s3=$(jq --raw-output ".\"2\"" <<< "$versions")
    version_pvddcr_cpu0=$(jq --raw-output ".\"3\"" <<< "$versions")

    if [ -n "$version_pvddcr_cpu1" ] && [ -n "$version_pvdd11_s3" ] && [ -n "$version_pvddcr_cpu0" ]; then
        if [ "$version_pvddcr_cpu0" != "ERROR:0" ]; then
            busctl set-property \
                xyz.openbmc_project.Settings \
                "/xyz/openbmc_project/software/host$slot/Sentinel_Dome_vr_pvddcr_cpu0" \
                xyz.openbmc_project.Software.Version \
                Version "s" "$version_pvddcr_cpu0"
        fi

        if [ "$version_pvddcr_cpu1" != "ERROR:0" ]; then
            busctl set-property \
                xyz.openbmc_project.Settings \
                "/xyz/openbmc_project/software/host$slot/Sentinel_Dome_vr_pvddcr_cpu1" \
                xyz.openbmc_project.Software.Version \
                Version "s" "$version_pvddcr_cpu1"
        fi

        if [ "$version_pvdd11_s3" != "ERROR:0" ]; then
            busctl set-property \
                xyz.openbmc_project.Settings \
                "/xyz/openbmc_project/software/host$slot/Sentinel_Dome_vr_pvdd11_s3" \
                xyz.openbmc_project.Software.Version \
                Version "s" "$version_pvdd11_s3"
        fi

        if [ "$version_pvddcr_cpu0" != "ERROR:0" ] && [ "$version_pvddcr_cpu1" != "ERROR:0" ] && [ "$version_pvdd11_s3" != "ERROR:0" ]; then
            break
        else
            echo "Version is ERROR, retrying... ($((RETRY_COUNT + 1))/$MAX_RETRIES)"
            RETRY_COUNT=$((RETRY_COUNT + 1))
            sleep 5
        fi
    else
        echo "Version is empty, retrying... ($((RETRY_COUNT + 1))/$MAX_RETRIES)"
        RETRY_COUNT=$((RETRY_COUNT + 1))
        sleep 5
    fi
done
